@using GSA.UnliquidatedObligations.Web.Models
@model IEnumerable<GSA.UnliquidatedObligations.BusinessLayer.Data.Workflow>
@{
    var todaysDate = DateTime.Today;
}
<table class="table table-responsive active-workflows">

    <tr>
        <th></th>
        <th>
            Zone
        </th>
        <th>
            Region
        </th>
        <th>
            Document Type
        </th>
        <th>
            Pesasys Document Number
        </th>
        <th>
            Pegasys Title Number
        </th>
        <th>
            Fund
        </th>
        <th>
            Organization
        </th>
        <th>
            BA Code
        </th>
        <th>
            Pegasys Vendor Name
        </th>
        <th>
            Contracting Officer Name
        </th>
        <th>
            Award Number
        </th>
        <th>
            Reason Included In Review
        </th>
        <th>
            Valid
        </th>
        <th>
            Status
        </th>
        <th></th>

    </tr>

    @foreach (var item in Model)
    {
        <tr class="active-workflows-record" data-id="@item.WorkflowId">
            <td>
                @Html.ActionLink("View ULO", "RegionWorkflowDetails", "Ulo", new { uloId = item.UnliquidatedObligation.UloId, workflowId = item.WorkflowId }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Region.Zone.ZoneId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Region.RegionId)
            </td>
            <td>
                Data Not Present
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.PegasysDocumentNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.PegasysTitleNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Fund)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Organization)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Prog)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.VendorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.ContractingOfficersName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.AwardNbr)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.ReasonIncludedInReview)
            </td>
            <td>
                @{
                    var isValid = item.UnliquidatedObligation.Valid == true ? "Yes" : "No";
                    @Html.Encode(isValid)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Status)
            </td>
            <td>@Html.Partial("Details/Workflow/RequestForReassignments/_ReassignButtonForMasterList", new WorkflowViewModel(item))</td>

        </tr>

                    }

</table>


@foreach (var item in Model)
{
    if (item.RequestForReassignments.Count == 0)
    {
        Html.RenderAction("Details", "RequestForReassignments", new { workflowId = item.WorkflowId, isAdmin = true });
    }
    else
    {
        Html.RenderAction("Details", "RequestForReassignments", new { id = item.RequestForReassignments.FirstOrDefault().RequestForReassignmentID, workflowId = item.WorkflowId, isAdmin = true });
    }

}


