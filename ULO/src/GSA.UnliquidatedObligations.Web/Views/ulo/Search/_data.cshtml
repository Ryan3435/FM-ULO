@using GSA.UnliquidatedObligations.Web.Models
@model IEnumerable<GSA.UnliquidatedObligations.BusinessLayer.Data.Workflow>
@{
    var todaysDate = DateTime.Today;
}
<table class="table table-responsive active-workflows">

    <tr>
        <th>@Html.SortableHeaderFor(z => z.TargetUloId, overrideDisplayName: "ULO ID")</th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Region.Zone.ZoneName, overrideDisplayName: "Zone")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Region.RegionName, overrideDisplayName: "Region")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.DocType, overrideDisplayName: "Document Type")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.PegasysDocumentNumber, overrideDisplayName: "Pesasys Document Number")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.PegasysTitleNumber, overrideDisplayName: "Pesasys Title Number")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Fund, overrideDisplayName: "Fund")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Organization, overrideDisplayName: "Organization")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Prog, overrideDisplayName: "BA Code")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.VendorName, overrideDisplayName: "Pegasys Vendor Name")            
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.ContractingOfficersName, overrideDisplayName: "Contracting Officer Name")            
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.AspNetUser.UserName, overrideDisplayName: "Currently Assigned to")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.AwardNbr, overrideDisplayName: "Award Number")            
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.ReasonIncludedInReview, overrideDisplayName: "Reason Included In Review")            
        </th>
        <th>
            Valid
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Status, overrideDisplayName: "Status")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.ReviewId, overrideDisplayName: "Review Id")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr class="active-workflows-record" data-id="@item.WorkflowId">
            <td>
                @Html.ActionLink("View ULO " + item.TargetUloId.ToString(), "RegionWorkflowDetails", "Ulo", new { uloId = item.UnliquidatedObligation.UloId, workflowId = item.WorkflowId }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Region.Zone.ZoneName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Region.RegionName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.DocType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.PegasysDocumentNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.PegasysTitleNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Fund)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Organization)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Prog)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.VendorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.ContractingOfficersName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AspNetUser.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.AwardNbr)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.ReasonIncludedInReview)
            </td>
            <td>
                @{
                    var isValid = item.UnliquidatedObligation.Valid == true ? "Yes" : "No";
                    @Html.Encode(isValid)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.ReviewId)
            </td>
            <td>@Html.Partial("Details/Workflow/RequestForReassignments/_ReassignButtonForMasterList", new WorkflowViewModel(item, true))</td>

        </tr>

                    }

</table>

@Html.Partial("_PaginationPartial")

@foreach (var item in Model)
{
    if (item.RequestForReassignments.Count == 0)
    {
        Html.RenderAction("Details", "RequestForReassignments", new { workflowId = item.WorkflowId, isAdmin = true });
    }
    else
    {
        Html.RenderAction("Details", "RequestForReassignments", new { id = item.RequestForReassignments.FirstOrDefault().RequestForReassignmentID, workflowId = item.WorkflowId, isAdmin = true });
    }
}
