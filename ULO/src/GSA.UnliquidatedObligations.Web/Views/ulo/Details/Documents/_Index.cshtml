@using RevolutionaryStuff.Core
@using System.Linq
@model GSA.UnliquidatedObligations.Web.Models.DocumentsViewModel
@{
    var documentTypeNameByDocumentTypeId = (IDictionary<int, string>)ViewBag.DocumentTypeNameByDocumentTypeId;
}
<div class="row documents">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">Documents</h3>
        </div>
        <div class="panel-body">
            <div class="noDataMessage"  style="@(@Model.Documents.Count == 0 ? "" : "display:none")" id="noDocumentMessage">No documents have been uploaded yet.</div>
            <table class="table table-responsive table-striped documents-list" style="@(@Model.Documents.Count > 0 ? "" : "display:none")" id="documentsTable">
                <tr class="documents-heading-row">
                    <th>
                        Name
                    </th>
                    <th>
                        Document Types
                    </th>
                    <th>
                        Attachments
                    </th>
                    <th>
                        Uploaded By
                    </th>
                    <th>
                        Uploaded Date
                    </th>
                    <th></th>
                </tr>
                @foreach (var document in Model.Documents)
                {
                    var rowId = "document" + document.DocumentId;
                    var modalId = "#" + @document.DocumentId + "Modal";
                    var deleteModalId = modalId + "Delete";
                    <tr id="@rowId">
                        <td>
                            @document.DocumentName
                        </td>
                        <td>
                            @if (document.DocumentDocumentTypes != null && document.DocumentDocumentTypes.Count > 0)
                            {
                                <ul class="document-type-list">
                                    @foreach (var ddt in document.DocumentDocumentTypes)
                                    {
                                        <li>@documentTypeNameByDocumentTypeId.FindOrDefault(ddt.DocumentTypeId)</li>
                                    }
                                </ul>
                            }
                        </td>
                        <td>
                            @((document.Attachments?.Count).GetValueOrDefault())
                        </td>
                        <td>
                            @document.AspNetUser.UserName
                        </td>
                        <td>
                            @document.CreatedAtUtc.ToLocalTime().ToString("MM/dd/yyyy")
                        </td>
                        <td>
                            <a data-toggle="modal" data-target="@modalId" href="@modalId">View</a>
                            @if (Model.AllowDocumentsEdit)
                            {

                                @Html.Raw("| <a data-toggle='modal' data-target='" + @deleteModalId + "' href='" + @deleteModalId + "'>Delete</a>")
                            }
                        </td>
                    </tr>
                }
            </table>
            @if (Model.AllowDocumentsEdit)
            {
                <button type="button" class="btn btn-primary document-add-btn" data-toggle="modal" data-target="#0Modal">Add</button>
            }
        </div>
    </div>
</div>

