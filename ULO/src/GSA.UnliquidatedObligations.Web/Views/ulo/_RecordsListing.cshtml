@using GSA.UnliquidatedObligations.Web.Models
@using GSA.UnliquidatedObligations.BusinessLayer.Authorization
@model IEnumerable<GSA.UnliquidatedObligations.BusinessLayer.Data.Workflow>
@{
    var todaysDate = DateTime.Today;
    var showReassignmentButton = ViewBag.ShowReassignButton;
    var userReassignRegions = User.GetReassignmentGroupRegions();
}

<table class="table table-responsive active-workflows">
    <tr>
        <th>
            @Html.SortableHeaderFor(z => z.TargetUloId, overrideDisplayName: "ULO ID")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.ReviewId, overrideDisplayName: "Review ID")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Region, overrideDisplayName: "Region")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.PegasysDocumentNumber, overrideDisplayName: "PDN")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Prog, overrideDisplayName: "BA Code")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Status, overrideDisplayName: "Review Status")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Organization, overrideDisplayName: "Org Code")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.TotalLine, overrideDisplayName: "Amount")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.UnliquidatedObligation.Valid, overrideDisplayName: "Valid")
        </th>
        <th>
            @Html.SortableHeaderFor(z => z.DueAtUtc, overrideDisplayName: "Due Date")
        </th>
        <th>Days left</th>
        @if (showReassignmentButton)
        {
            <th></th>
        }
    </tr>

    @foreach (var item in Model)
    {
        <tr class="active-workflows-record" data-id="@item.WorkflowId">
            <td>
                @Html.ActionLink("View ULO " + item.TargetUloId.ToString(), "Details", "Ulo", new { uloId = item.UnliquidatedObligation.UloId, workflowId = item.WorkflowId }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.ReviewId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Region.RegionName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.PegasysDocumentNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Prog)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnliquidatedObligation.Organization)
            </td>
            <td>
                @Html.Currency(Convert.ToDecimal(item.UnliquidatedObligation.TotalLine))
            </td>
            <td>
                @{
                    var isValid = item.UnliquidatedObligation.Valid == true ? "Yes" : "No";
                    @Html.Encode(isValid)
                }
            </td>
            <td>
                @* TODO: Get Due Dates from Review *@
                @*@Html.DisplayFor(modelItem => item.UnliquidatedObligation.ExpectedDateForCompletionResolution)*@
            </td>
            <td>
                @{
                    @*var dueDate = Convert.ToDateTime(item.UnliquidatedObligation.ExpectedDateForCompletionResolution);
                        var daysLeft = dueDate.Subtract(todaysDate).TotalDays;
                        @Html.Encode(daysLeft)*@

                }
            </td>
            <td>
                @if (showReassignmentButton && User.HasPermission(ApplicationPermissionNames.CanReassign) && userReassignRegions.Contains(item.UnliquidatedObligation.RegionId))
                {

                    @Html.Partial("~/Views/Ulo/Details/Workflow/RequestForReassignments/_ReassignButtonForMasterList.cshtml", new WorkflowViewModel(item, true))
                }
            </td>
            @*<td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.WorkflowId }) |
                    @Html.ActionLink("Details", "Details", new { id=item.WorkflowId }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.WorkflowId })
                </td>*@
        </tr>
                    }

</table>
@if (showReassignmentButton)
{
    foreach (var item in Model)
    {
        if (item.RequestForReassignments.Count == 0)
        {
            Html.RenderAction("Details", "RequestForReassignments", new { workflowId = item.WorkflowId, uloRegionId = item.UnliquidatedObligation.RegionId, isAdmin = true });
        }
        else
        {
            Html.RenderAction("Details", "RequestForReassignments", new { id = item.RequestForReassignments.FirstOrDefault().RequestForReassignmentID, workflowId = item.WorkflowId, uloRegionId = item.UnliquidatedObligation.RegionId, isAdmin = true });
        }
    }
}
@Html.Partial("_PaginationPartial")

