@using RevolutionaryStuff.Core;
@using GSA.UnliquidatedObligations.BusinessLayer.Data.Reporting;
@using GSA.UnliquidatedObligations.Web.Models;
@using GSA.UnliquidatedObligations.Web.Controllers;
@model ConfigureReportModel
@{
    var rd = Model.Description;
    ViewBag.Title = rd.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-xs-12">
        <h1>@rd.Title</h1>
        @if (rd.Description != null)
        {
            <p class="subheading">@rd.Description</p>
        }
    </div>
</div>

@using (Html.BeginForm(ReportsController.ActionNames.ExecuteReport, null, new { name = rd.Name }, FormMethod.Post, new { @class = "inline-form", role = "form" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    foreach (var p in rd.Parameters.Where(z => !z.IsHardcoded))
    {
        string htmlInputType;
        if (p.ClrType.IsNumber())
        {
            htmlInputType = "number";
        }
        if (p.ClrType == typeof(DateTime))
        {
            htmlInputType = "date";
        }
        else
        {
            htmlInputType = "text";
        }
        <div class="row">
            <div class="col-sm-12">
                <div class="form-row">
                    <label for="@p.SqlParameterName">@p.Title</label>
                    @{ 
                        IEnumerable<SelectListItem> items = null;
                        switch (p.ReportParameterRenderHint)
                        {
                            case ReportParameterRenderHints.Region:
                                items = Model.RegionItems;
                                break;
                            case ReportParameterRenderHints.Review:
                                items = Model.ReviewItems;
                                break;
                            case ReportParameterRenderHints.TextArea:
                                <textarea class="form-control" name="@p.SqlParameterName"></textarea>
                                break;
                            case ReportParameterRenderHints.Standard:
                            default:
                                <input class="form-control" name="@p.SqlParameterName" type="@htmlInputType" required="required" />
                                break;
                        }
                        if (items != null)
                        {
                            @Html.DropDownList(p.SqlParameterName, items, AspHelpers.PleaseSelectOneDropdownItemText, new { required= "required" });
                        }
                    }
                </div>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-xs-12 text-right">
            <input type="submit" value="Execute" class="btn btn-default btn-primary btn-large" />
        </div>
    </div>
}